plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.cmgcode.minimoods'
    compileSdk 34

    def apiKeys = loadApiKeys()

    defaultConfig {
        applicationId "com.cmgcode.minimoods"
        minSdkVersion 21
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "SENTRY_DSN", apiKeys['SENTRY_DSN']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
}

dependencies {
    def lifecycle_version = "2.6.1"
    def arch_version = "2.2.0"
    def room_version = "2.5.2"
    def espresso_version = "3.5.1"
    def junit_version = "1.1.5"

    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    // Compose
    def composeBom = platform('androidx.compose:compose-bom:2023.08.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material3:material3'

    // Compose - Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    // Jetpack
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.preference:preference-ktx:1.2.1"

    // UI
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.applandeo:material-calendar-view:1.9.0-rc03'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'nl.dionsegijn:konfetti:1.2.1'

    // Support
    implementation 'io.sentry:sentry-android:7.11.0'

    // Testing
    testImplementation "androidx.test.ext:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1"
    testImplementation "io.mockk:mockk:1.13.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'org.robolectric:robolectric:4.10'
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'

    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    // Compose - UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

}

kapt {
    correctErrorTypes true
}

static def loadApiKeys() {
    Properties properties = new Properties()
    properties.load(new FileInputStream(new File("secrets.properties")))
    return properties
}
